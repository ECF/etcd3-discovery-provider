# use GrpcGenerator to generate code to src-gen using protofiles dir and protofiles/rpc.proto file
#-generate \
#    protofiles; \
#        output = src-gen/main/java; \
#        generate = "org.eclipse.ecf.bndtools.grpc.GrpcGenerator rxjava3 -I=protofiles --java_out=src-gen/main/java rpc.proto auth.proto kv.proto"

-buildpath: \
	org.apache.tomcat:annotations-api,\
	com.google.guava:guava,\
	com.salesforce.servicelibs.reactive-grpc-common,\
	com.salesforce.servicelibs.rx3grpc-stub,\
	wrapped.io.grpc.grpc-api,\
	wrapped.io.grpc.grpc-protobuf,\
	wrapped.io.grpc.grpc-stub,\
	wrapped.io.grpc.grpc-context,\
	io.reactivex.rxjava3.rxjava,\
	org.osgi.framework,\
	org.eclipse.ecf,\
	org.eclipse.ecf.discovery,\
	org.osgi.util.tracker,\
	org.osgi.service.log,\
	org.eclipse.ecf.identity,\
	org.eclipse.equinox.common,\
	org.eclipse.core.jobs,\
	org.json,\
	org.eclipse.equinox.concurrent,\
	wrapped.com.google.protobuf.protobuf-java,\
	slf4j.api,\
	reactive-streams

javac.source=17
javac.target=17

package-version = 1.0.2
Bundle-Version: 1.2.0.${tstamp}

-runfw: org.apache.felix.framework;version='[7.0.0,7.0.0]'
-runee: JavaSE-17

Import-Package: com.google.common.util.concurrent;version="26.0", org.osgi.framework, *

Provide-Capability: osgi.remoteserviceadmin.discovery;protocols:List<String>="ETCD,etcd3,ecf.discovery.etcd3,ecf.discovery.etcd3.locator,ecf.discovery.etcd3.advertiser";version:Version=1.1.0

Bundle-Activator: org.eclipse.ecf.provider.etcd3.Activator
Bundle-Name: ECF Etcd3 Discovery Provider
Bundle-Vendor: Eclipse.org - ECF
Export-Package: \
	org.eclipse.ecf.provider.etcd3.grpc.api,\
	org.eclipse.ecf.provider.etcd3.grpc.api.kv,\
	org.eclipse.ecf.provider.etcd3.grpc.api.auth,\
	org.eclipse.ecf.provider.etcd3.identity,\
	org.eclipse.ecf.provider.etcd3.grpc.client,\
	org.eclipse.ecf.provider.etcd3.container
-privatepackage: org.eclipse.ecf.provider.etcd3
